@using PagedList.Mvc
@model PagedList.IPagedList<FashionShop.Models.Product>
@{
    int CurrentPage = ViewBag.CurrentPage;
    ViewData["Title"] = "Sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/Content/lib/product-filter/css/reset.css"> <!-- CSS reset -->
<link rel="stylesheet" href="~/Content/lib/product-filter/css/style.css"> <!-- Resource style -->
<script src="~/Content/lib/product-filter/js/modernizr.js"></script> <!-- Modernizr -->
<div class="page-header">
    <div class="header-sub-title">
        <nav class="breadcrumb breadcrumb-dash">
            <a href="@Url.Action("Index", "Home")" class="breadcrumb-item"><i class="fa-solid fa-house mr-1"></i>Trang chủ</a>
            <span class="breadcrumb-item active">Sản phẩm</span>
        </nav>
    </div>
</div>
    <div class="container-fluid p-0 bg-light">
        <main class="cd-main-content">
            <div class="cd-tab-filter-wrapper">
                <div class="cd-tab-filter filter-is-visible">
                    @*				<ul class="cd-filters">
                        <li class="placeholder">
                            <a data-type="all" href="#0">All</a> <!-- selected option on mobile -->
                        </li>
                        <li class="filter"><a class="selected" href="#0" data-type="all">All</a></li>
                        <li class="filter" data-filter=".color-1"><a href="#0" data-type="color-1">Color 1</a></li>
                        <li class="filter" data-filter=".color-2"><a href="#0" data-type="color-2">Color 2</a></li>
                    </ul> <!-- cd-filters -->*@
                </div> <!-- cd-tab-filter -->
            </div> <!-- cd-tab-filter-wrapper -->

            <section class="cd-gallery filter-is-visible">
                <ul>
                    @{
                        string CheckPrice(decimal? price)
                        {
                            if (price == null)
                            {
                                return "price4";
                            }
                            switch (price)
                            {
                                case decimal p when p <= 200000:
                                    return "price0";
                                case decimal p when p > 200000 && p <= 500000:
                                    return "price1";
                                case decimal p when p > 500000 && p <= 1000000:
                                    return "price2";
                                case decimal p when p > 1000000:
                                    return "price3";
                                default:
                                    return "price4";
                            }
                        }
                    }
                    @{
                        foreach (var item in Model)
                        {
                            <li class="mix text-center @(CheckPrice(item.Price - (item.Discount ?? 0))) @(item.CategoryId) @(item.BranchId) @(item.Name)" style="height:300px">
                                <a href="@Url.Action("Details", "Product", new { id = item.Id})" class="text-reset">
                                    <div class="card h-100 card-feature">
                                        <div class="bg-image hover-zoom ripple ripple-surface ripple-surface-light"
                                             data-mdb-ripple-color="light">
                                            <img src="~/Assets/images/product/@item.Image" alt="@item.Name"
                                                 class="card-img-top w-100" />
                                            <div class="position-relative">
                                                <div class="mask">
                                                    <div class="d-flex justify-content-start align-items-end h-100">
                                                        <h5>
                                                            <span class="badge text-light badge-primary ml-sm-1">New</span>
                                                            <span class="badge text-light badge-danger">Eco</span>
                                                        </h5>
                                                    </div>
                                                </div>
                                                <div class="hover-overlay">
                                                    <div class="mask" style="background-color: rgba(251, 251, 251, 0.15);"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="card-body p-1" style="font-size:0.8rem">
                                            <div class="">
                                                <span class="fw-bold">@(item.Name?.Count() >= 24 ? item.Name?.Substring(0, 24) + "..." : item.Name)</span>
                                            </div>
                                            <div class="mb-1">
                                                <span>@(item.Branch?.Name)</span>
                                            </div>
                                            <h6 class="py-sm-1">
                                                @if (item.Discount != null && item.Discount != 0)
                                                {
                                                    <span class="text-muted fw-normal text-decoration-line-through">@(item.Price?.ToString("n0"))</span>
                                                }
                                                <span class="m-gg">@((item.Price - (item.Discount ?? 0))?.ToString("n0"))</span>
                                            </h6>
                                            <div class="ratings d-flex flex-row justify-content-around align-items-center">
                                                <div class="d-flex flex-row">
                                                    @{
                                                        double RoundToNearestHalf(double number)
                                                        {
                                                            // Làm tròn số về đơn vị 0.5
                                                            return Math.Round(number * 2, MidpointRounding.AwayFromZero) / 2;
                                                        }
                                                    }
                                                    @{
                                                        var avg = item.Feedbacks?.Average(f => f.Rate);
                                                        avg = RoundToNearestHalf(avg ?? 0);
                                                        if (avg == 0)
                                                        {
                                                            <i class="fas fa-star"></i>
                                                            <i class="fas fa-star"></i>
                                                            <i class="fas fa-star"></i>
                                                            <i class="fas fa-star"></i>
                                                            <i class="fas fa-star"></i>
                                                        }
                                                        else
                                                        {
                                                            for (int i = 1; i <= avg; i++)
                                                            {
                                                                <i class="fas fa-star"></i>
                                                                if (avg - i == 0.5)
                                                                {
                                                                    <i class="fa-solid fa-star-half-stroke"></i>
                                                                }
                                                            }
                                                            for (int i = 1; i <= 5 - avg; i++)
                                                            {
                                                                <i class="far fa-star"></i>
                                                            }
                                                        }
                                                    }
                                                </div>
                                                <span>24 reviews</span>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            </li>
                        }
                    }
                    <li class="gap"></li>
                    <li class="gap"></li>
                    <li class="gap"></li>
                    <li class="gap"></li>
                </ul>
                <div class="cd-fail-message">No results found</div>
            </section> <!-- cd-gallery -->

            <div class="cd-filter filter-is-visible">
                <form>
                    <div class="cd-filter-block">
                        <h4>Search</h4>

                        <div class="cd-filter-content">
                            <input type="search" placeholder="Tìm kiếm">
                        </div> <!-- cd-filter-content -->
                    </div> <!-- cd-filter-block -->

                    <div class="cd-filter-block">
                        <h4>Theo giá</h4>
                        <ul class="cd-filter-content cd-filters list">
                            @{
                                var listPrice = ViewBag.PriceRate as Dictionary<string, string>;
                                                        foreach (var item in listPrice)
                                                        {
                            <li>
                                <input class="filter" type="checkbox" data-filter="@(item.Key)" id="@(item.Key + "checkbox")">
                                <label class="checkbox-label" for="@(item.Key + "checkbox")">@(item.Value)</label>
                            </li>
                                                        }
                            }
                        </ul> <!-- cd-filter-content -->
                        @*<ul class="cd-filter-content cd-filters list">
                            <li>
                                <input class="filter" data-filter=".check1" type="checkbox" id="checkbox1">
                                <label class="checkbox-label" for="checkbox1">Option 1</label>
                            </li>

                            <li>
                                <input class="filter" data-filter=".check2" type="checkbox" id="checkbox2">
                                <label class="checkbox-label" for="checkbox2">Option 2</label>
                            </li>

                            <li>
                                <input class="filter" data-filter=".check3" type="checkbox" id="checkbox3">
                                <label class="checkbox-label" for="checkbox3">Option 3</label>
                            </li>
                        </ul> <!-- cd-filter-content -->*@
                    </div> <!-- cd-filter-block -->

                    <div class="cd-filter-block">
                        <h4>Danh mục</h4>

                        <div class="cd-filter-content">
                            <div class="cd-select cd-filters">
                                <select class="filter" name="selectThis" id="selectThis">
                                    <option value="">Tất cả</option>
                                    @{
                                        var listCategory = ViewBag.Category as Dictionary<string, string>;
                                        foreach (var item in listCategory)
                                        {
                                            <option value="@(item.Key)">@(item.Value)</option>

                                        }
                                    }

                                    @*<option value="">Tất cả</option>
                                    <option value=".option2">Option 2</option>
                                    <option value=".option3">Option 3</option>
                                    <option value=".option4">Option 4</option>*@
                                </select>
                            </div> <!-- cd-select -->
                        </div> <!-- cd-filter-content -->
                    </div> <!-- cd-filter-block -->

                    <div class="cd-filter-block">
                        <h4>Thương hiệu</h4>
                        <ul class="cd-filter-content cd-filters list">
                            <li>
                                <input class="filter" data-filter="" type="radio" name="radioButton" id="radio1" checked>
                                <label class="radio-label" for="radio1">All</label>
                            </li>
                            @{
                                var listBranch = ViewBag.Branch as Dictionary<string, string>;
                                foreach (var item in listBranch)
                                {
                                    <li>
                                        <input class="filter" type="radio" data-filter="@(item.Key)" name="radioButton" id="@(item.Key + "radio")">
                                        <label class="radio-label" for="@(item.Key + "radio")">@(item.Value)</label>
                                    </li>
                                }
                            }
                        </ul> <!-- cd-filter-content -->
                        @*<ul class="cd-filter-content cd-filters list">
                            <li>
                                <input class="filter" data-filter="" type="radio" name="radioButton" id="radio1" checked>
                                <label class="radio-label" for="radio1">All</label>
                            </li>

                            <li>
                                <input class="filter" data-filter=".radio2" type="radio" name="radioButton" id="radio2">
                                <label class="radio-label" for="radio2">Choice 2</label>
                            </li>

                            <li>
                                <input class="filter" data-filter=".radio3" type="radio" name="radioButton" id="radio3">
                                <label class="radio-label" for="radio3">Choice 3</label>
                            </li>
                        </ul> <!-- cd-filter-content -->*@
                    </div> <!-- cd-filter-block -->
                </form>
                <a href="#0" style="text-decoration:none" class="cd-close fa-lg fa-solid fa-xmark"></a>
            </div> <!-- cd-filter -->

            <a href="#0" class="cd-filter-trigger filter-is-visible">Bộ lọc</a>
        </main> <!-- cd-main-content -->
        <div aria-label="Page navigation example">
            <ul class="pagination mr-3 float-right" style="margin-top:-70px">
                @Html.PagedListPager(
                    Model,
                    page => Url.Action("Index", new { page }) // asp-action="Index"
                   )
            </ul>
        </div>
    </div>

@section scripts{
    <script src="~/Content/lib/product-filter/js/jquery.mixitup.min.js"></script>
    <script src="~/Content/lib/product-filter/js/main.js"></script> <!-- Resource jQuery -->
}